# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-01-29 08:48
from __future__ import unicode_literals

import codenerix.models
import codenerix.models_people
import codenerix_extensions.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('codenerix_geodata', '0003_auto_20180118_1209'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('codenerix_pos', '0001_initial'),
        ('codenerix_storages', '0010_auto_20180123_1316'),
        ('codenerix_cms', '0008_auto_20171123_1019'),
        ('codenerix_corporate', '0003_auto_20180118_1757'),
        ('codenerix_invoicing', '0004_saleslines'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('author', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external', to='codenerix_cms.StaticPageAuthor', verbose_name='Author')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('corporate_image', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to='codenerix_corporate.CorporateImage', verbose_name='Corporate Image')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('surname', models.CharField(max_length=90, verbose_name='Surname')),
                ('disabled', models.DateTimeField(blank=True, null=True, verbose_name='Disabled from')),
                ('nid', models.CharField(blank=True, max_length=20, validators=[codenerix_extensions.validators.spanishNIFNIECIF], verbose_name='NID')),
                ('nid_type', models.CharField(choices=[('U', 'Unspecified'), ('P', 'Passport'), ('D', 'DNI'), ('N', 'NIE'), ('C', 'CIF')], default='U', max_length=1, verbose_name='NID Type')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('lang', models.CharField(choices=[('es', 'Spanish'), ('en', 'English')], max_length=2, verbose_name='Language')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Phone')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creators', to=settings.AUTH_USER_MODEL)),
                ('customer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external', to='codenerix_invoicing.Customer', verbose_name='Customer')),
                ('pos_operator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external', to='codenerix_pos.POSOperator', verbose_name='POS Operator')),
                ('provider', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external', to='codenerix_invoicing.Provider', verbose_name='Provider')),
                ('storage_operator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external', to='codenerix_storages.StorageOperator', verbose_name='Storage operator')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
                ('zone', models.ManyToManyField(blank=True, null=True, related_name='external', to='codenerix_storages.StorageZone', verbose_name='Storage zone')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
            },
            bases=(codenerix.models.GenLog, models.Model),
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('town', models.CharField(blank=True, max_length=250, null=True, verbose_name='Town')),
                ('zipcode', models.CharField(blank=True, max_length=6, null=True, verbose_name='Zip code')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Phone')),
                ('alias', models.CharField(blank=True, max_length=100, null=True, verbose_name='Alias')),
                ('mobile_phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Mobile Phone')),
                ('main_delivery', models.BooleanField(default=False, max_length=250, verbose_name='Main delivery')),
                ('main_invoice', models.BooleanField(default=False, max_length=250, verbose_name='Main invoice')),
                ('address_delivery', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_delivery', to='codenerix_invoicing.Address', verbose_name='Address delivery')),
                ('address_invoice', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='external_invoice', to='codenerix_invoicing.Address', verbose_name='Address invoice')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people_personaddress_geo_addresses', to='codenerix_geodata.City', verbose_name='City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people_personaddress_geo_addresses', to='codenerix_geodata.Country', verbose_name='Country')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='people.Person', verbose_name='Person')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people_personaddress_geo_addresses', to='codenerix_geodata.Province', verbose_name='Province')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='people_personaddress_geo_addresses', to='codenerix_geodata.Region', verbose_name='Region')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
            },
        ),
        migrations.CreateModel(
            name='Publicist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='publicists', to='people.Person', verbose_name='Person')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'list'),
            },
            bases=(codenerix.models_people.GenRole, models.Model),
        ),
        migrations.AddField(
            model_name='authorship',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='people.Person'),
        ),
    ]
